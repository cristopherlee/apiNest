# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:10

pipelines:
  default:
    - step:
        name: 'Installing and Building'
        caches:
          - node
        script:
          - echo "Your build and test goes here..."
          - npm install
          - npm run build
        artifacts:
          - node_modules/**
    - step:
        name: 'Lint'
        script:
          - echo "Your linting goes here..."
          - npm run lint
        artifacts:
          - node_modules/**
    - step:
        name: 'Unit test'
        script:
          - echo "Testing our API..."
          
          - npm run test:e2e
        artifacts:
          - node_modules/**
    - step:
        name: 'Security scan'
        script:
          - echo "Your security scan goes here..."
    - step:
        name: 'Build to Staging'
        script:
          - echo "Your build to staging script goes here..."
          # - cd site
          # - npm run build:stage
    - step:
        name: 'Build to Production'
        script:
          - echo "Your build to production script goes here..."
          # - cd site
          # - npm run build:prod
    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        name: 'Deployment to Staging'
        deployment: staging
        script:
          - echo "Your deployment to staging script goes here..."
    - step:
        name: 'Deployment to Production'
        deployment: production
        trigger: 'manual'
        script:
          - echo "Your deployment to production script goes here..."
